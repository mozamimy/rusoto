var searchIndex = {};
searchIndex["rusoto"] = {"doc":"Rusoto is an AWS SDK for Rust. A high level overview is available in `README.md` at https://github.com/rusoto/rusoto.","items":[[3,"AwsCredentials","rusoto","AWS API access credentials, including access key, secret key, token (for IAM profiles), expiration timestamp, and claims from federated login.",null,null],[3,"ChainProvider","","Provides AWS credentials from multiple possible sources using a priority order.",null,null],[3,"ContainerProvider","","Provides AWS credentials from a task's IAM role.",null,null],[3,"CredentialsError","","",null,null],[12,"message","","",0,null],[3,"EnvironmentProvider","","Provides AWS credentials from environment variables.",null,null],[3,"InstanceMetadataProvider","","Provides AWS credentials from a resource's IAM role.",null,null],[3,"ProfileProvider","","Provides AWS credentials from a profile in a credentials file.",null,null],[8,"ProvideAwsCredentials","","A trait for types that produce `AwsCredentials`.",null,null],[10,"credentials","","Produce a new `AwsCredentials`.",1,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[6,"DefaultCredentialsProvider","","The credentials provider you probably want to use if you don't require Sync for your AWS services. Wraps a `ChainProvider` in an `AutoRefreshingProvider` that uses a `RefCell` to cache credentials",null,null],[6,"DefaultCredentialsProviderSync","","The credentials provider you probably want to use if you do require Sync for your AWS services. Wraps a `ChainProvider` in an `AutoRefreshingProvider` that uses a `Mutex` to lock credentials in a threadsafe manner.",null,null],[0,"claims","","Credential Claims module.",null,null],[17,"SUBJECT","rusoto::claims","Key used in the claims map for the `Subject` claim.",null,null],[17,"AUDIENCE","","Key used in the claims map for the `Audience` claim.",null,null],[17,"ISSUER","","Key used in the claims map for the `Issuer` claim.",null,null],[6,"AutoRefreshingProviderSync","rusoto","Threadsafe `AutoRefreshingProvider` that locks cached credentials with a `Mutex`",null,null],[6,"AutoRefreshingProvider","","`!Sync` `AutoRefreshingProvider` that caches credentials in a `RefCell`",null,null],[3,"BaseAutoRefreshingProvider","","Wrapper for `ProvideAwsCredentials` that caches the credentials returned by the wrapped provider.  Each time the credentials are accessed, they are checked to see if they have expired, in which case they are retrieved from the wrapped provider again.",null,null],[11,"new","","Create a new `AwsCredentials` from a key ID, secret key, optional access token, and expiry time.",2,{"inputs":[{"name":"k"},{"name":"s"},{"name":"option"},{"name":"datetime"}],"output":{"name":"awscredentials"}}],[11,"aws_access_key_id","","Get a reference to the access key ID.",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"aws_secret_access_key","","Get a reference to the secret access key.",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"expires_at","","Get a reference to the expiry time.",2,{"inputs":[{"name":"self"}],"output":{"name":"datetime"}}],[11,"token","","Get a reference to the access token.",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"claims","","Get the token claims",2,{"inputs":[{"name":"self"}],"output":{"name":"btreemap"}}],[11,"claims_mut","","Get the mutable token claims",2,{"inputs":[{"name":"self"}],"output":{"name":"btreemap"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",8,{"inputs":[],"output":{"name":"chainprovider"}}],[11,"credentials","","",3,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"credentials","","",4,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"credentials","","",5,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"credentials","","",6,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"credentials","","",7,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"credentials","","",7,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"credentials","","",8,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"profileprovider"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"awscredentials"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"chainprovider"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"credentialserror"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"credentialserror"}],"output":{"name":"bool"}}],[11,"from","","",0,{"inputs":[{"name":"parseerror"}],"output":{"name":"credentialserror"}}],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"credentialserror"}}],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"new","","Create a new `ChainProvider` using a `ProfileProvider` with the default settings.",8,{"inputs":[],"output":{"name":"chainprovider"}}],[11,"with_profile_provider","","Create a new `ChainProvider` using the provided `ProfileProvider`.",8,{"inputs":[{"name":"profileprovider"}],"output":{"name":"chainprovider"}}],[11,"new","","",0,{"inputs":[{"name":"s"}],"output":{"name":"credentialserror"}}],[11,"new","","Create a new `ProfileProvider` for the default credentials file path and profile name.",6,{"inputs":[],"output":{"name":"result"}}],[11,"with_configuration","","Create a new `ProfileProvider` for the credentials file at the given path, using the given profile.",6,{"inputs":[{"name":"f"},{"name":"p"}],"output":{"name":"profileprovider"}}],[11,"file_path","","Get a reference to the credentials file path.",6,{"inputs":[{"name":"self"}],"output":{"name":"path"}}],[11,"profile","","Get a reference to the profile name.",6,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"set_file_path","","Set the credentials file path.",6,null],[11,"set_profile","","Set the profile name.",6,null],[11,"with_mutex","","",7,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"with_refcell","","",7,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"new","","",7,{"inputs":[],"output":{"name":"result"}}],[11,"new","","",7,{"inputs":[],"output":{"name":"result"}}]],"paths":[[3,"CredentialsError"],[8,"ProvideAwsCredentials"],[3,"AwsCredentials"],[3,"ContainerProvider"],[3,"EnvironmentProvider"],[3,"InstanceMetadataProvider"],[3,"ProfileProvider"],[3,"BaseAutoRefreshingProvider"],[3,"ChainProvider"]]};
searchIndex["rusoto_credential"] = {"doc":"Types for loading and managing AWS access credentials for API requests.","items":[[3,"EnvironmentProvider","rusoto_credential","Provides AWS credentials from environment variables.",null,null],[3,"ContainerProvider","","Provides AWS credentials from a task's IAM role.",null,null],[3,"InstanceMetadataProvider","","Provides AWS credentials from a resource's IAM role.",null,null],[3,"ProfileProvider","","Provides AWS credentials from a profile in a credentials file.",null,null],[3,"AwsCredentials","","AWS API access credentials, including access key, secret key, token (for IAM profiles), expiration timestamp, and claims from federated login.",null,null],[3,"CredentialsError","","",null,null],[12,"message","","",0,null],[3,"BaseAutoRefreshingProvider","","Wrapper for `ProvideAwsCredentials` that caches the credentials returned by the wrapped provider.  Each time the credentials are accessed, they are checked to see if they have expired, in which case they are retrieved from the wrapped provider again.",null,null],[3,"ChainProvider","","Provides AWS credentials from multiple possible sources using a priority order.",null,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"credentials","","",1,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"credentials","","",2,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"credentials","","",3,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"profileprovider"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new `ProfileProvider` for the default credentials file path and profile name.",4,{"inputs":[],"output":{"name":"result"}}],[11,"with_configuration","","Create a new `ProfileProvider` for the credentials file at the given path, using the given profile.",4,{"inputs":[{"name":"f"},{"name":"p"}],"output":{"name":"profileprovider"}}],[11,"file_path","","Get a reference to the credentials file path.",4,{"inputs":[{"name":"self"}],"output":{"name":"path"}}],[11,"profile","","Get a reference to the profile name.",4,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"set_file_path","","Set the credentials file path.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"set_profile","","Set the profile name.",4,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[11,"credentials","","",4,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[0,"claims","","Credential Claims module.",null,null],[17,"SUBJECT","rusoto_credential::claims","Key used in the claims map for the `Subject` claim.",null,null],[17,"AUDIENCE","","Key used in the claims map for the `Audience` claim.",null,null],[17,"ISSUER","","Key used in the claims map for the `Issuer` claim.",null,null],[6,"AutoRefreshingProviderSync","rusoto_credential","Threadsafe `AutoRefreshingProvider` that locks cached credentials with a `Mutex`",null,null],[6,"AutoRefreshingProvider","","`!Sync` `AutoRefreshingProvider` that caches credentials in a `RefCell`",null,null],[6,"DefaultCredentialsProvider","","The credentials provider you probably want to use if you don't require Sync for your AWS services. Wraps a `ChainProvider` in an `AutoRefreshingProvider` that uses a `RefCell` to cache credentials",null,null],[6,"DefaultCredentialsProviderSync","","The credentials provider you probably want to use if you do require Sync for your AWS services. Wraps a `ChainProvider` in an `AutoRefreshingProvider` that uses a `Mutex` to lock credentials in a threadsafe manner.",null,null],[8,"ProvideAwsCredentials","","A trait for types that produce `AwsCredentials`.",null,null],[10,"credentials","","Produce a new `AwsCredentials`.",5,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"awscredentials"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new `AwsCredentials` from a key ID, secret key, optional access token, and expiry time.",6,{"inputs":[{"name":"k"},{"name":"s"},{"name":"option"},{"name":"datetime"}],"output":{"name":"awscredentials"}}],[11,"aws_access_key_id","","Get a reference to the access key ID.",6,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"aws_secret_access_key","","Get a reference to the secret access key.",6,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"expires_at","","Get a reference to the expiry time.",6,{"inputs":[{"name":"self"}],"output":{"name":"datetime"}}],[11,"token","","Get a reference to the access token.",6,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"claims","","Get the token claims",6,{"inputs":[{"name":"self"}],"output":{"name":"btreemap"}}],[11,"claims_mut","","Get the mutable token claims",6,{"inputs":[{"name":"self"}],"output":{"name":"btreemap"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"credentialserror"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"credentialserror"}],"output":{"name":"bool"}}],[11,"new","","",0,{"inputs":[{"name":"s"}],"output":{"name":"credentialserror"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from","","",0,{"inputs":[{"name":"parseerror"}],"output":{"name":"credentialserror"}}],[11,"from","","",0,{"inputs":[{"name":"ioerror"}],"output":{"name":"credentialserror"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"with_mutex","","",8,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"credentials","","",7,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"with_refcell","","",9,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"credentials","","",7,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"new","","",10,{"inputs":[],"output":{"name":"result"}}],[11,"new","","",11,{"inputs":[],"output":{"name":"result"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",12,{"inputs":[],"output":{"name":"chainprovider"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"chainprovider"}}],[11,"credentials","","",12,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"new","","Create a new `ChainProvider` using a `ProfileProvider` with the default settings.",12,{"inputs":[],"output":{"name":"chainprovider"}}],[11,"with_profile_provider","","Create a new `ChainProvider` using the provided `ProfileProvider`.",12,{"inputs":[{"name":"profileprovider"}],"output":{"name":"chainprovider"}}]],"paths":[[3,"CredentialsError"],[3,"ContainerProvider"],[3,"EnvironmentProvider"],[3,"InstanceMetadataProvider"],[3,"ProfileProvider"],[8,"ProvideAwsCredentials"],[3,"AwsCredentials"],[3,"BaseAutoRefreshingProvider"],[6,"AutoRefreshingProviderSync"],[6,"AutoRefreshingProvider"],[6,"DefaultCredentialsProvider"],[6,"DefaultCredentialsProviderSync"],[3,"ChainProvider"]]};
initSearch(searchIndex);
